var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};

// components/src/product-gallery.js
import { LitElement, html, css } from "./-global.min.js";

// components/src/lib/utils/general.js
function getChildSlot(shadowRoot = null, name = "", firstOnly = false) {
  const children = shadowRoot?.querySelector("slot")?.assignedElements({ flatten: true }).filter((node) => {
    return node.matches(name);
  }) || [];
  return firstOnly ? (children || [])[0] : children;
}

// components/src/product-gallery.js
var HHProductGallery = class extends LitElement {
  constructor() {
    super();
  }
  firstUpdated() {
    this._children = getChildSlot(this.shadowRoot, "img, div");
  }
  requestUpdate(name, oldValue) {
    name === "variant" && this.updateActiveImage();
    return super.requestUpdate(name, oldValue);
  }
  updateActiveImage() {
    this._children.forEach((child) => {
      child.matches(`[data-id="${this.variant}"]`) ? this.showChild(child) : this.hideChild(child);
    });
  }
  showChild(child) {
    const SRC = child.getAttribute("data-src");
    if (!!SRC) {
      child.setAttribute("src", SRC);
      child.removeAttribute("data-src");
    }
    child.classList.remove("hidden");
  }
  hideChild(child) {
    child.classList.add("hidden");
  }
  render() {
    return html`<slot></slot>`;
  }
};
__publicField(HHProductGallery, "properties", {
  variant: {
    type: String
  },
  _current: {
    state: true
  },
  _children: {
    state: true
  }
});
__publicField(HHProductGallery, "styles", css`
    ::slotted(img) {
      width: var(--image-width, 300px);
      height: var(--image-height, 300px);
      object-fit: cover;
    }
    ::slotted(.hidden),
    ::slotted([data-src]) {
      display: none;
    }
  `);
customElements.define("hh-product-gallery", HHProductGallery);
//# sourceMappingURL=-component-product-gallery.min.js.map
