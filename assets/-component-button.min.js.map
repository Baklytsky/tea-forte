{
  "version": 3,
  "sources": ["../components/src/button.js"],
  "sourcesContent": ["import { LitElement, html, css } from 'lit'\nimport { classMap } from 'lit/directives/class-map.js'\n\nclass HHButton extends LitElement {\n  static properties = {\n    key: {},\n    href: { type: String },\n    decoration: { type: String },\n    spacing: { type: String },\n    type: { type: String },\n    underline: {\n      converter(value) {\n        return value === 'true' ? true : false\n      },\n    },\n    onclick: {\n      type: String,\n      attribute: 'custom:click',\n    },\n  }\n\n  constructor() {\n    super()\n\n    this.underline = true\n  }\n\n  onClick(e) {\n    if (!this.onclick) {\n      return\n    }\n\n    this.dispatchEvent(\n      new CustomEvent(this.onclick, {\n        bubbles: true,\n        composed: true,\n        detail: {\n          key: this.key,\n          event: e,\n        },\n      })\n    )\n  }\n\n  render() {\n    return html`${!this.href\n      ? html`<button\n          class=\"${classMap({\n            underline: this.underline,\n          })}\"\n          @click=\"${this.onClick}\"\n          type=\"${this.type || 'button'}\"\n          value=\"Submit\"\n        >\n          <slot></slot>\n        </button>`\n      : html`<a\n          class=\"${classMap({\n            underline: this.underline,\n          })}\"\n          href=\"${this.href}\"\n          @click=\"${this.onClick}\"\n        >\n          <slot></slot>\n        </a>`}`\n  }\n\n  static styles = css`\n    button {\n      max-width: var(--hh-max-width, 160px);\n    }\n\n    :host {\n      align-items: center;\n      display: flex;\n    }\n\n    :host([width='full']) button {\n      width: 100%;\n      max-width: none;\n    }\n\n    :host([theme='tertiary']) button {\n      max-width: none;\n    }\n\n    button,\n    a {\n      cursor: pointer;\n      background-color: var(--hh-background, #000);\n      color: var(--hh-color, #fff);\n      transition: all var(--hh-transition, 300ms);\n      border: 0;\n      appearance: none;\n      font: var(--hh-font);\n      text-transform: var(--hh-text-transform);\n      letter-spacing: var(--hh-letter-spacing);\n      padding: var(--hh-padding);\n      text-decoration: none;\n      white-space: nowrap;\n      display: block;\n    }\n\n    button.large,\n    a.large {\n      font: var(--hh-font-large);\n      padding: 11px 20px;\n    }\n\n    button:focus,\n    a:focus {\n      transition: none;\n      outline: 0.2rem solid var(--hh-color-focus);\n      outline-offset: var(--hh-focus-outline-offset);\n    }\n\n    :host([theme='secondary']) button,\n    :host([theme='secondary']) a {\n      background: var(--hh-background, transparent);\n      border: var(--hh-border-width, 1px) solid var(--hh-border-color, #000);\n      color: var(--hh-color, #000);\n    }\n\n    :host([theme='tertiary']) button,\n    :host([theme='tertiary']) a {\n      position: relative;\n      background: var(--hh-background, transparent);\n      color: var(--hh-color, #000);\n      padding: var(--hh-padding, 0);\n    }\n\n    :host([theme='tertiary']) button.underline:after,\n    :host([theme='tertiary']) a.underline:after {\n      content: '';\n      position: absolute;\n      left: 0;\n      bottom: var(--hh-border-bottom-offset, 0);\n      background-color: currentColor;\n      width: calc(100% - var(--hh-letter-spacing, 0px));\n      height: var(--hh-underline-width, 1px);\n    }\n\n    :slotted() {\n      font: var(--hh-font);\n    }\n\n    :host([decoration~='rounded']) button,\n    :host([decoration~='rounded']) a {\n      border-radius: var(--hh-border-radius, 4px);\n    }\n  `\n}\n\ncustomElements.define('hh-button', HHButton)\n"],
  "mappings": ";;;;;;;;AAAA,SAAS,YAAY,MAAM,WAAW;AACtC,SAAS,gBAAgB;AAEzB,IAAM,WAAN,cAAuB,WAAW;AAAA,EAkBhC,cAAc;AACZ,UAAM;AAEN,SAAK,YAAY;AAAA,EACnB;AAAA,EAEA,QAAQ,GAAG;AACT,QAAI,CAAC,KAAK,SAAS;AACjB;AAAA,IACF;AAEA,SAAK;AAAA,MACH,IAAI,YAAY,KAAK,SAAS;AAAA,QAC5B,SAAS;AAAA,QACT,UAAU;AAAA,QACV,QAAQ;AAAA,UACN,KAAK,KAAK;AAAA,UACV,OAAO;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EAEA,SAAS;AACP,WAAO,OAAO,CAAC,KAAK,OAChB;AAAA,mBACW,SAAS;AAAA,MAChB,WAAW,KAAK;AAAA,IAClB,CAAC;AAAA,oBACS,KAAK;AAAA,kBACP,KAAK,QAAQ;AAAA;AAAA;AAAA;AAAA,qBAKvB;AAAA,mBACW,SAAS;AAAA,MAChB,WAAW,KAAK;AAAA,IAClB,CAAC;AAAA,kBACO,KAAK;AAAA,oBACH,KAAK;AAAA;AAAA;AAAA;AAAA,EAIvB;AAsFF;AAnJE,cADI,UACG,cAAa;AAAA,EAClB,KAAK,CAAC;AAAA,EACN,MAAM,EAAE,MAAM,OAAO;AAAA,EACrB,YAAY,EAAE,MAAM,OAAO;AAAA,EAC3B,SAAS,EAAE,MAAM,OAAO;AAAA,EACxB,MAAM,EAAE,MAAM,OAAO;AAAA,EACrB,WAAW;AAAA,IACT,UAAU,OAAO;AACf,aAAO,UAAU,SAAS,OAAO;AAAA,IACnC;AAAA,EACF;AAAA,EACA,SAAS;AAAA,IACP,MAAM;AAAA,IACN,WAAW;AAAA,EACb;AACF;AAgDA,cAhEI,UAgEG,UAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsFlB,eAAe,OAAO,aAAa,QAAQ;",
  "names": []
}
