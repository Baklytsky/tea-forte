var h=Object.defineProperty;var s=(e,t,r)=>t in e?h(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r;var n=(e,t,r)=>(s(e,typeof t!="symbol"?t+"":t,r),r);import{LitElement as l,html as a,css as c}from"./-global.min.js";import{classMap as i}from"./-global.min.js";var o=class extends l{constructor(){super(),this.underline=!0}onClick(t){!this.onclick||this.dispatchEvent(new CustomEvent(this.onclick,{bubbles:!0,composed:!0,detail:{key:this.key,event:t}}))}render(){return a`${this.href?a`<a
          class="${i({underline:this.underline})}"
          href="${this.href}"
          @click="${this.onClick}"
        >
          <slot></slot>
        </a>`:a`<button
          class="${i({underline:this.underline})}"
          @click="${this.onClick}"
          type="${this.type||"button"}"
          value="Submit"
        >
          <slot></slot>
        </button>`}`}};n(o,"properties",{key:{},href:{type:String},decoration:{type:String},spacing:{type:String},type:{type:String},underline:{converter(t){return t==="true"}},onclick:{type:String,attribute:"custom:click"}}),n(o,"styles",c`
    button {
      max-width: var(--hh-max-width, 160px);
    }

    :host {
      align-items: center;
      display: flex;
    }

    :host([width='full']) button {
      width: 100%;
      max-width: none;
    }

    :host([theme='tertiary']) button {
      max-width: none;
    }

    button,
    a {
      cursor: pointer;
      background-color: var(--hh-background, #000);
      color: var(--hh-color, #fff);
      transition: all var(--hh-transition, 300ms);
      border: 0;
      appearance: none;
      font: var(--hh-font);
      text-transform: var(--hh-text-transform);
      letter-spacing: var(--hh-letter-spacing);
      padding: var(--hh-padding);
      text-decoration: none;
      white-space: nowrap;
      display: block;
    }

    button.large,
    a.large {
      font: var(--hh-font-large);
      padding: 11px 20px;
    }

    button:focus,
    a:focus {
      transition: none;
      outline: 0.2rem solid var(--hh-color-focus);
      outline-offset: var(--hh-focus-outline-offset);
    }

    :host([theme='secondary']) button,
    :host([theme='secondary']) a {
      background: var(--hh-background, transparent);
      border: var(--hh-border-width, 1px) solid var(--hh-border-color, #000);
      color: var(--hh-color, #000);
    }

    :host([theme='tertiary']) button,
    :host([theme='tertiary']) a {
      position: relative;
      background: var(--hh-background, transparent);
      color: var(--hh-color, #000);
      padding: var(--hh-padding, 0);
    }

    :host([theme='tertiary']) button.underline:after,
    :host([theme='tertiary']) a.underline:after {
      content: '';
      position: absolute;
      left: 0;
      bottom: var(--hh-border-bottom-offset, 0);
      background-color: currentColor;
      width: calc(100% - var(--hh-letter-spacing, 0px));
      height: var(--hh-underline-width, 1px);
    }

    :slotted() {
      font: var(--hh-font);
    }

    :host([decoration~='rounded']) button,
    :host([decoration~='rounded']) a {
      border-radius: var(--hh-border-radius, 4px);
    }
  `);customElements.define("hh-button",o);
